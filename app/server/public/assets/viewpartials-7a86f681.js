const h="modulepreload",d=function(s){return"/"+s},f={},w=function(e,r,c){if(!r||r.length===0)return e();const l=document.getElementsByTagName("link");return Promise.all(r.map(t=>{if(t=d(t),t in f)return;f[t]=!0;const o=t.endsWith(".css"),u=o?'[rel="stylesheet"]':"";if(!!c)for(let i=l.length-1;i>=0;i--){const a=l[i];if(a.href===t&&(!o||a.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${t}"]${u}`))return;const n=document.createElement("link");if(n.rel=o?"stylesheet":h,o||(n.as="script",n.crossOrigin=""),n.href=t,document.head.appendChild(n),o)return new Promise((i,a)=>{n.addEventListener("load",i),n.addEventListener("error",()=>a(new Error(`Unable to preload CSS for ${t}`)))})})).then(()=>e())};async function m(s){const e=await fetch(s);if(!e.ok)throw new Error("HTTP error "+e.status);const r=await e.text();return new DOMParser().parseFromString(r,"text/html").body.firstChild}async function g(s){for(let e of s){const r=await m(e.path);document.getElementById(e.container).appendChild(r)}}export{w as _,g as l};
